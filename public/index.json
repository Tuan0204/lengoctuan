[{"content":"\u003cp\u003eJest là framework test phổ biến cho JavaScript, dễ cấu hình và tích hợp với CI.\u003c/p\u003e\n\u003ch2 id=\"ví-dụ-test\"\u003eVí dụ test\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eJest\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elà\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eframework\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etest\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ephổ\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebiến\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003echo\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eJavaScript\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003edễ\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ecấu\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehình\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003evà\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etích\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehợp\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003evới\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eCI\u003c/span\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e##\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eVí\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003edụ\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etest\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e```js\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003etest(\u0026#39;sum\u0026#39;, () =\u0026gt; {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e\texpect(1 + 2).toBe(3);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e});\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lời-khuyên\"\u003eLời khuyên\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eViết test nhỏ, độc lập\u003c/li\u003e\n\u003cli\u003eMock dependencies khi cần\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết luận: thêm test giúp phát hiện lỗi sớm và tăng độ tin cậy phần mềm.\u003c/p\u003e\n","description":null,"image":"/images/posts/js-jest.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/js-testing-jest/","title":"Testing JavaScript với Jest"},{"content":"\u003cp\u003eReact giúp xây dựng giao diện tương tác bằng cách chia UI thành các component.\u003c/p\u003e\n\u003ch2 id=\"ví-dụ-component\"\u003eVí dụ component\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-jsx\" data-lang=\"jsx\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eHello\u003c/span\u003e({\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e}) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e \u0026lt;\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e\u0026gt;\u003cspan style=\"color:#a6e22e\"\u003eHello\u003c/span\u003e {\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e}\u0026lt;/\u003cspan style=\"color:#f92672\"\u003eh1\u003c/span\u003e\u0026gt;;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lời-khuyên\"\u003eLời khuyên\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eQuản lý state hợp lý (useState, useReducer)\u003c/li\u003e\n\u003cli\u003eSử dụng React Router cho SPA routing\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết luận: React phù hợp cho UI phức tạp, hãy bắt đầu với create-react-app hoặc Vite.\u003c/p\u003e\n\u003cp\u003eBài hướng dẫn ngắn giúp bạn dựng SPA cơ bản, cấu trúc project, và cách tối ưu render.\u003c/p\u003e\n","description":null,"image":"/images/posts/js-react.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/js-react-spa/","title":"React SPA — Bắt đầu nhanh"},{"content":"\u003cp\u003eKhi thao tác DOM trực tiếp, hãy chú ý hiệu năng: giảm số lần reflow và repaints.\u003c/p\u003e\n\u003ch2 id=\"mẹo\"\u003eMẹo\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSử dụng DocumentFragment khi chèn nhiều phần tử\u003c/li\u003e\n\u003cli\u003eSử dụng event delegation thay vì gắn nhiều listener\u003c/li\u003e\n\u003cli\u003eCập nhật class/attribute một lần thay vì nhiều lần\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết luận: tối ưu thao tác DOM giúp cải thiện trải nghiệm người dùng, đặc biệt trên thiết bị yếu.\u003c/p\u003e\n\u003cp\u003eHướng dẫn về truy vấn phần tử, event delegation, batch DOM updates và tránh các anti-pattern gây chậm.\u003c/p\u003e\n","description":null,"image":"/images/posts/js-dom.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/js-dom-best-practices/","title":"DOM Best Practices"},{"content":"\u003cp\u003eAsync/await giúp viết mã bất đồng bộ trông như đồng bộ, làm cho luồng xử lý dễ hiểu hơn.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003easync\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efunction\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003efetchData\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e---\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003etitle\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Async / Await trong JavaScript\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003edate\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#ae81ff\"\u003e2024\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e03\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e10\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eT09\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e00\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e00\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e07\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e\u003cspan style=\"color:#ae81ff\"\u003e00\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003edraft\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003etags\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e [\u003cspan style=\"color:#a6e22e\"\u003ejavascript\u003c/span\u003e, \u003cspan style=\"color:#66d9ef\"\u003easync\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ecategories\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e [\u003cspan style=\"color:#a6e22e\"\u003eJavaScript\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003esummary\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Sử dụng async/await để làm việc với Promise một cách tuần tự và rõ ràng\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eimage\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e:\u003c/span\u003e \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/images/posts/js-async-await.svg\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#f92672\"\u003e---\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eAsync\u003c/span\u003e\u003cspan style=\"color:#f92672\"\u003e/\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003eawait\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003egiúp\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eviết\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003emã\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebất\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eđồng\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebộ\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003etrông\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003enhư\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eđồng\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ebộ\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003elàm\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003echo\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eluồng\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003exử\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elý\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003edễ\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehiểu\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ehơn\u003c/span\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#e6db74\"\u003e```js\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e  async function fetchData() {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    try {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e      const res = await fetch(\u0026#39;/api/data\u0026#39;);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e      const json = await res.json();\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e      return json;\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    } catch (e) {\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e      console.error(e);\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e    }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#e6db74\"\u003e  }\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lưu-ý\"\u003eLưu ý\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eLuôn bắt lỗi với try/catch\u003c/li\u003e\n\u003cli\u003eTránh chạy nhiều await tuần tự nếu có thể dùng Promise.all\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết luận: async/await là công cụ mạnh cho mã bất đồng bộ, nhưng cần chú ý hiệu năng khi chạy tuần tự.\u003c/p\u003e\n","description":null,"image":"/images/posts/js-async-await.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/js-async-await/","title":"Async / Await trong JavaScript"},{"content":"\u003cp\u003eES6 mang đến nhiều cú pháp hiện đại giúp mã ngắn gọn và dễ bảo trì.\u003c/p\u003e\n\u003ch2 id=\"ví-dụ-nhanh\"\u003eVí dụ nhanh\u003c/h2\u003e\n\u003cp\u003eES6 mang đến nhiều cú pháp hiện đại giúp mã ngắn gọn và dễ bảo trì.\u003c/p\u003e\n\u003ch2 id=\"ví-dụ-nhanh-1\"\u003eVí dụ nhanh\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-js\" data-lang=\"js\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003econst\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e (\u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003eb\u003c/span\u003e) =\u0026gt; \u003cspan style=\"color:#a6e22e\"\u003ea\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eb\u003c/span\u003e;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003econst\u003c/span\u003e [\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e, \u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e] \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e [\u003cspan style=\"color:#ae81ff\"\u003e1\u003c/span\u003e, \u003cspan style=\"color:#ae81ff\"\u003e2\u003c/span\u003e];\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003econsole\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003elog\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e + \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e = \u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e${\u003c/span\u003e\u003cspan style=\"color:#a6e22e\"\u003eadd\u003c/span\u003e(\u003cspan style=\"color:#a6e22e\"\u003ex\u003c/span\u003e,\u003cspan style=\"color:#a6e22e\"\u003ey\u003c/span\u003e)\u003cspan style=\"color:#e6db74\"\u003e}\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e`\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"lời-khuyên\"\u003eLời khuyên\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDùng const cho hằng số, let cho biến thay vì var\u003c/li\u003e\n\u003cli\u003eSử dụng module để tách rời mã\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết luận: nâng cấp kỹ năng ES6 giúp viết code hiện đại và tương thích với công cụ build.\u003c/p\u003e\n","description":null,"image":"/images/posts/js-es6.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/js-es6-features/","title":"JavaScript ES6: Những tính năng quan trọng"},{"content":"\u003cp\u003eSpring Boot giúp khởi tạo ứng dụng web nhanh chóng. Ví dụ controller đơn giản:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@RestController\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003e@RequestMapping\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/api/books\u0026#34;\u003c/span\u003e)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003eBookController\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#a6e22e\"\u003e@GetMapping\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e List\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eBook\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elist\u003c/span\u003e() { \u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e List.\u003cspan style=\"color:#a6e22e\"\u003eof\u003c/span\u003e(); }\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"cấu-hình\"\u003eCấu hình\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSử dụng Spring Initializr để bootstrap project\u003c/li\u003e\n\u003cli\u003eCấu hình application.properties cho port, datasource\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"bảo-mật-và-testing\"\u003eBảo mật và testing\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eSử dụng Spring Security cho authentication\u003c/li\u003e\n\u003cli\u003eViết unit test với MockMvc\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết luận: Spring Boot phù hợp cho REST services nhanh chóng và có hệ sinh thái phong phú.\u003c/p\u003e\n\u003cp\u003eBước qua việc tạo project, định nghĩa endpoint, kết nối database, và đóng gói ứng dụng để triển khai.\u003c/p\u003e\n","description":null,"image":"/images/posts/java-springboot.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/java-springboot-restapi/","title":"Spring Boot REST API cơ bản"},{"content":"\u003cp\u003eXử lý ngoại lệ giúp chương trình an toàn hơn và dễ gỡ lỗi. Sử dụng try/catch để bắt và xử lý lỗi, finally để giải phóng tài nguyên.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003etry\u003c/span\u003e (BufferedReader br \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e BufferedReader(\u003cspan style=\"color:#66d9ef\"\u003enew\u003c/span\u003e FileReader(path))) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    \u003cspan style=\"color:#75715e\"\u003e// đọc file\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e} \u003cspan style=\"color:#66d9ef\"\u003ecatch\u003c/span\u003e (IOException e) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e    e.\u003cspan style=\"color:#a6e22e\"\u003eprintStackTrace\u003c/span\u003e();\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eBạn có thể định nghĩa custom exception bằng cách kế thừa Exception hoặc RuntimeException.\u003c/p\u003e\n\u003ch2 id=\"lời-khuyên\"\u003eLời khuyên\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBắt các exception cụ thể thay vì Exception chung chung\u003c/li\u003e\n\u003cli\u003eSử dụng try-with-resources để tự động đóng tài nguyên\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết luận: xử lý ngoại lệ tốt cải thiện độ tin cậy của ứng dụng.\u003c/p\u003e\n","description":null,"image":"/images/posts/java-exceptions.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/java-exception-handling/","title":"Xử lý ngoại lệ trong Java"},{"content":"\u003cp\u003eJava Streams API cho phép xử lý tập hợp dữ liệu theo cách khai báo và có thể tận dụng song song (parallel).\u003c/p\u003e\n\u003ch2 id=\"khởi-tạo-stream\"\u003eKhởi tạo Stream\u003c/h2\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eList\u003cspan style=\"color:#f92672\"\u003e\u0026lt;\u003c/span\u003eString\u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e items \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e List.\u003cspan style=\"color:#a6e22e\"\u003eof\u003c/span\u003e(\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;apple\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;banana\u0026#34;\u003c/span\u003e,\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;cherry\u0026#34;\u003c/span\u003e);\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eitems.\u003cspan style=\"color:#a6e22e\"\u003estream\u003c/span\u003e()\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t.\u003cspan style=\"color:#a6e22e\"\u003efilter\u003c/span\u003e(s \u003cspan style=\"color:#f92672\"\u003e-\u0026gt;\u003c/span\u003e s.\u003cspan style=\"color:#a6e22e\"\u003elength\u003c/span\u003e() \u003cspan style=\"color:#f92672\"\u003e\u0026gt;\u003c/span\u003e 5)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t.\u003cspan style=\"color:#a6e22e\"\u003emap\u003c/span\u003e(String::toUpperCase)\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t.\u003cspan style=\"color:#a6e22e\"\u003eforEach\u003c/span\u003e(System.\u003cspan style=\"color:#a6e22e\"\u003eout\u003c/span\u003e::println);\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"các-operation-chính\"\u003eCác operation chính\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eintermediate: map, filter, sorted\u003c/li\u003e\n\u003cli\u003eterminal: collect, forEach, reduce\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"lời-khuyên\"\u003eLời khuyên\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eTránh trạng thái bên ngoài khi dùng stream\u003c/li\u003e\n\u003cli\u003eSử dụng parallelStream cẩn trọng\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eKết hợp Streams với Optional và collectors sẽ giúp mã ngắn gọn và dễ đọc.\u003c/p\u003e\n\u003cp\u003eBài viết mô tả cách sử dụng Streams để filter, map, reduce, và xử lý song song dữ liệu một cách hiệu quả.\u003c/p\u003e\n","description":null,"image":"/images/posts/java-streams.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/java-streams-api/","title":"Java Streams API"},{"content":"\u003cp\u003eJava là một ngôn ngữ hướng đối tượng (OOP) mạnh mẽ. Trong bài viết này chúng ta sẽ điểm qua 4 nguyên tắc chính của OOP và cách áp dụng chúng trong Java.\u003c/p\u003e\n\u003ch2 id=\"1-lớp-và-đối-tượng\"\u003e1. Lớp và đối tượng\u003c/h2\u003e\n\u003cp\u003eLớp (class) là khuôn mẫu, đối tượng (object) là thể hiện cụ thể của lớp. Ví dụ:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e---\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etitle: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Giới thiệu OOP trong Java\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edate: 2024\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e01\u003cspan style=\"color:#f92672\"\u003e-\u003c/span\u003e02T10:00:00\u003cspan style=\"color:#f92672\"\u003e+\u003c/span\u003e07:00\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003edraft: \u003cspan style=\"color:#66d9ef\"\u003efalse\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etags: \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003ejava, oop\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecategories: \u003cspan style=\"color:#f92672\"\u003e[\u003c/span\u003eJava\u003cspan style=\"color:#f92672\"\u003e]\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esummary: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;Những khái niệm cơ bản về lập trình hướng đối tượng trong Java\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eimage: \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;/images/posts/java-oop.svg\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#f92672\"\u003e---\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eJava là một ngôn ngữ hướng đối \u003cspan style=\"color:#a6e22e\"\u003etượng\u003c/span\u003e (OOP) mạnh mẽ. Trong bài viết này chúng ta sẽ điểm qua 4 nguyên tắc chính của OOP và cách áp dụng chúng trong Java.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e##\u003c/span\u003e 1. Lớp và đối tượng\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#a6e22e\"\u003eLớp\u003c/span\u003e (\u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e)\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003elà\u003c/span\u003e khuôn mẫu, đối \u003cspan style=\"color:#a6e22e\"\u003etượng\u003c/span\u003e (object) là thể hiện cụ thể của lớp. Ví dụ:\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#960050;background-color:#1e0010\"\u003e```\u003c/span\u003ejava\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePerson\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePerson\u003c/span\u003e(String name) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e String \u003cspan style=\"color:#a6e22e\"\u003egetName\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-tính-đóng-gói-encapsulation\"\u003e2. Tính đóng gói (Encapsulation)\u003c/h2\u003e\n\u003cp\u003eẨn dữ liệu bên trong lớp và cung cấp phương thức truy cập (getter/setter) để bảo vệ trạng thái.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"image-imagespostsjava-oopsvg\"\u003etitle: \u0026ldquo;Giới thiệu OOP trong Java\u0026rdquo;\ndate: 2024-01-02T10:00:00+07:00\ndraft: false\ntags: [java, oop]\ncategories: [Java]\nsummary: \u0026ldquo;Những khái niệm cơ bản về lập trình hướng đối tượng trong Java\u0026rdquo;\nimage: \u0026ldquo;/images/posts/java-oop.svg\u0026rdquo;\u003c/h2\u003e\n\u003cp\u003eJava là một ngôn ngữ hướng đối tượng (OOP) mạnh mẽ. Trong bài viết này chúng ta sẽ điểm qua 4 nguyên tắc chính của OOP và cách áp dụng chúng trong Java.\u003c/p\u003e\n\u003ch2 id=\"1-lớp-và-đối-tượng-1\"\u003e1. Lớp và đối tượng\u003c/h2\u003e\n\u003cp\u003eLớp (class) là khuôn mẫu, đối tượng (object) là thể hiện cụ thể của lớp. Ví dụ:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-java\" data-lang=\"java\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#66d9ef\"\u003eclass\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePerson\u003c/span\u003e {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003eprivate\u003c/span\u003e String name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e \u003cspan style=\"color:#a6e22e\"\u003ePerson\u003c/span\u003e(String name) {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003ethis\u003c/span\u003e.\u003cspan style=\"color:#a6e22e\"\u003ename\u003c/span\u003e \u003cspan style=\"color:#f92672\"\u003e=\u003c/span\u003e name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\u003cspan style=\"color:#66d9ef\"\u003epublic\u003c/span\u003e String \u003cspan style=\"color:#a6e22e\"\u003egetName\u003c/span\u003e() {\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t\t\u003cspan style=\"color:#66d9ef\"\u003ereturn\u003c/span\u003e name;\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e\t}\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e}\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch2 id=\"2-tính-đóng-gói-encapsulation-1\"\u003e2. Tính đóng gói (Encapsulation)\u003c/h2\u003e\n\u003cp\u003eẨn dữ liệu bên trong lớp và cung cấp phương thức truy cập (getter/setter) để bảo vệ trạng thái.\u003c/p\u003e\n\u003ch2 id=\"3-kế-thừa-inheritance\"\u003e3. Kế thừa (Inheritance)\u003c/h2\u003e\n\u003cp\u003eCho phép một lớp con kế thừa thuộc tính và phương thức từ lớp cha, giúp tái sử dụng mã.\u003c/p\u003e\n\u003ch2 id=\"4-đa-hình-polymorphism\"\u003e4. Đa hình (Polymorphism)\u003c/h2\u003e\n\u003cp\u003eCho phép sử dụng cùng một interface với nhiều kiểu đối tượng khác nhau.\u003c/p\u003e\n\u003ch2 id=\"kết-luận\"\u003eKết luận\u003c/h2\u003e\n\u003cp\u003eBắt đầu với ví dụ nhỏ, sau đó mở rộng bằng các bài tập thực tế để nắm vững OOP trong Java.\u003c/p\u003e\n","description":null,"image":"/images/posts/java-oop.svg","permalink":"https://github.com/Tuan0204/lengoctuan/blogs/java-intro-oop/","title":"Giới thiệu OOP trong Java"},{"content":"\u003chr\u003e\n\u003ch2 id=\"nội-dung-mẫu-cho-bài-viết-đầu-tiên\"\u003eNội dung mẫu cho bài viết đầu tiên.\u003c/h2\u003e\n\u003cp\u003eNội dung mẫu cho bài viết đầu tiên.\u003c/p\u003e\n","description":null,"image":null,"permalink":"https://github.com/Tuan0204/lengoctuan/blogs/first-post/","title":"Bài viết đầu tiên"}]